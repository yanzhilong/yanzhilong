@model SxShoeModel

@{
    ViewBag.Title = "鞋子管理";
    ViewBag.HeaderTitle = "鞋子管理";
    ViewBag.ActiveMenuItemSystemName = "Shoe";

    HtmlString CidItemsHtml = Html.DropDownListFor(model => model.Cid, Model.CidItems, htmlAttributes: new { required = "required", @class = "k-input" });
    string CidItems = CidItemsHtml.ToHtmlString();
    string CidItemsReplace = CidItems.Replace("\r\n", "");

}

@section Head{
    <style type=text/css>
    </style>
}

@section HeadRight{
    <button id="maketbshoe" data-toggle="modal" data-target="#makeItems" class="btn bg-blue">全部生成宝贝</button>
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">过滤筛选</h3>
    </div>
    <div class="content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <div class="form-group">
                    <div class="col-md-2"></div>
                    <div class="col-md-10">
                        @Html.ValidationSummary(true, "请求参数不正确", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FilterTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.FilterNumber, new { htmlAttributes = new { @class = "form-control", id = "FilterTitle" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FilterNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.FilterNumber, new { htmlAttributes = new { @class = "form-control", id = "FilterNumber" } })
                    </div>
                </div>

            </div>
        }
    </div>
</div>

<div class="panel panel-default">
    <div id="grid"></div>

    <script>

        $(document).ready(function () {
            var ReadUrl = "@(Request.Url.GetLeftPart(UriPartial.Authority) + Url.Action("List", "Shoe"))";
            var UpdateUrl = "@(Request.Url.GetLeftPart(UriPartial.Authority) + Url.Action("Update", "Shoe"))";
            var CreateUrl = "@(Request.Url.GetLeftPart(UriPartial.Authority) + Url.Action("Create", "Shoe"))";
            var DestroyUrl = "@(Request.Url.GetLeftPart(UriPartial.Authority) + Url.Action("Delete", "Shoe"))",

            dataSource = new kendo.data.DataSource({
                transport: {
                    read:  {
                        url: ReadUrl,
                        dataType: "jsonp"
                    },
                    update: {
                        url: UpdateUrl,

                        dataType: "jsonp"
                    },
                    destroy: {
                        url: DestroyUrl,
                        type: "post",
                        dataType: "jsonp"
                    },
                    create: {
                        url: CreateUrl,
                        type: "post",
                        dataType: "jsonp"
                    },
                    parameterMap: function (options, operation) {

                        //传过滤的models到后台
                        if (operation == "read") {
                            return { models: kendo.stringify(FilterModels()) };
                        }

                        if (operation !== "read" && options.models) {
                            return {models: kendo.stringify(options.models)};
                        }
                    }
                },
                batch: true,
                pageSize: 20,
                schema: {
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, nullable: true },
                            MainImage: { editable: false, nullable: true },
                            Title: { editable: false, validation: { required: true } },
                            Url: { editable: false,validation: { required: true }},
                            Price: { editable: false,validation: { required: true }},
                            Popularity: { editable: false,validation: { required: true }},
                            UpdateStr: { editable: false,validation: { required: true }},
                            Sort: { editable: false, validation: { required: true } },
                            Number: { editable: false, validation: { required: true } },
                            Cid: { validation: { required: true } }
                        }
                    }
                }
            });
            dataSource.bind("error", dataSource_error);

            function dataSource_error(e) {
                var responsejson = e.xhr.responseText;
                alert(e.status);
            }

            $("#grid").kendoGrid({
                dataSource: dataSource,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [
                    {
                        field: "MainImage",
                        title: "预览图片",
                        width: 100,
                        template: "<div class='customer-photo'" +
                        "style='background-image: url(#:data.MainImage#);'></div>"
                    },
                    {field: "Title", title: "标题"},
                    { field: "Url", title: "网址", editable: false, template: "<a href=\"#:data.Url#\" target=\"__blank\">#:data.Url#</a>"},
                    { field: "Price", title: "价格" },
                    { field: "Popularity", title: "人气" },
                    { field: "UpdateStr", title: "更新" },
                    { field: "Sort", title: "更新排序" },
                    { field: "Number", title: "商家编码" },
                    { field: "Cid", title: "类目", editor: CidSelect, template: "#=CidStr#" },
                    { command: ["edit","destroy", { name: "生成宝贝", click: makeTbItem }], title: "&nbsp;", width: "280px" }],
                editable: "popup"
            });

            $("#affirm_make").click(function () {

                var dataSource = $("#grid").data("kendoGrid").dataSource;
                var filters = dataSource.filter();//搜索选项
                var allData = dataSource.data();//全部数据
                var query = new kendo.data.Query(allData);
                var data = query.filter(filters).data;//筛选后的数据
                var displayedData = $("#grid").data().kendoGrid.dataSource.view()
                var displayedDataAsJSON = JSON.stringify(displayedData);

                var mycars = new Array()
                for (var i = 0; i < allData.length; i++) {
                    mycars.push(allData[i]);
                }
                var filter = new Object();
                filter.sxShoeModels = mycars;
                var filterjson = JSON.stringify(filter);
                var shoelistjson = JSON.stringify({ sxShoeModels: mycars })
                //将数据提交
                var url = "@Url.Action("MakeTbItems", "Shoe")";
                $.ajax({
                cache: false,
                    type: 'POST',
                    url: url,
                    data: { sxShoeModels: JSON.stringify(mycars) },
                    dataType: 'json',
                    success: function(data) {
                        if (data != null && data.success) {
                            alert(data.responseText);
                            $('#makeItems').modal('hide');
                        } else {
                            // DoSomethingElse()
                            alert(data.responseText);
                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    }
                });

            });

            //得到过滤的Models
            function FilterModels() {
                var array = new Array()
                filter = new Object();
                filter.FilterTitle = $("#FilterTitle").val();
                filter.FilterNumber = $("#FilterNumber").val();
                array[0] = filter;
                filterModels = array;
                return filterModels;
            }

            //设置筛选事件
            $('#FilterTitle').bind('input propertychange', function () { Filter()});
            $('#FilterNumber').bind('input propertychange', function () { Filter()});

            function Filter() {
                $('#grid').data('kendoGrid').dataSource.read();
                $('#grid').data('kendoGrid').refresh();
            }

        });

        //生成宝贝
        function makeTbItem(e) {
            e.preventDefault();
            var tr = $(e.target).closest("tr"); // get the current table row (tr)
            var data = this.dataItem(tr);
            var Id = data.Id;
            var url = "@Url.Action("MakeTbItem", "Shoe")";
            $.ajax({
                url: url,
                data: {Id : Id},
                success: function (data) {
                    if (data != null && data.success) {
                        alert(data.responseText);
                    } else {
                        // DoSomethingElse()
                        alert(data.responseText);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                }
            });
        }

        function CidSelect(container, options) {
                var select2 = '@Html.Raw(CidItemsReplace)';
                $(select2).appendTo(container);
        }

    </script>
</div>

<style type="text/css">
    .customer-photo {
        display: inline-block;
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background-size: 80px 80px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }
</style>

<!-- 全部生成宝贝 -->
<div class="modal fade" id="makeItems" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">全部生成宝贝</h4>
            </div>
            <div class="modal-body">
                <p>将当前鞋子全部生成宝贝</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="affirm_make">确定</button>
            </div>
        </div>
    </div>
</div>