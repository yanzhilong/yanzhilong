@model yanzhilong.Domain.Article
@{var categoryMetadata = new yanzhilong.Domain.Category();}
@{
    ViewBag.Title = "文章编辑";
}


@section head{

    <!-- include summernote css/js-->
    <link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.3/summernote.css" rel="stylesheet">
    <script src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.3/summernote.js"></script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create</h4>
        <hr />
        @Html.ValidationSummary(true, "请求参数不正确", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Content)

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="summernote" placeholder="请输入" action="@Url.Action("Upload", "File")"></div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Disc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Disc, new { htmlAttributes = new { @class = "form-control", rows = 8 } })
                @Html.ValidationMessageFor(model => model.Disc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", rows = 5 } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => categoryMetadata.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category.CategoryID", ViewBag.categorys as IEnumerable<SelectListItem>)
                @Html.ValidationMessageFor(model => categoryMetadata.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section scripts{
    <!-- 内部javascript -->
    <script>

	    $(document).ready(function() {

		    var placeholder = $("#summernote").attr("placeholder") || '';//设置输入提示
		    var url = $("#summernote").attr("action") || '';//设置上传图片的url
		    $("#summernote").summernote({
			    lang: 'zh-CN',
			    placeholder: placeholder,
			    minHeight: 300,
			    dialogsFade: true,// 设置滑动效果Add fade effect on dialogs
			    dialogsInBody: true,// 设置窗口显示位置Dialogs can be placed in body, not in
			    disableDragAndDrop: false,//设置拖拽
			    callbacks: {
				    onImageUpload: function (files) {
				        $(files).each(function () {
				            var file = this;
				            var data = new FormData();
				            data.append("file", file);
				            //ajax上传图片
				            $.ajax({
				                url: url,
				                type: "post",
				                data: data,
				                dataType: "json",
				                cache: false,
				                contentType: false,
				                processData: false,
				                success: function (response) {
				                    alert(response.responseText);
				                    var jsonObj = JSON.parse(response);  // JSON.parse(); 方法
				                    alert("成功" + jsonObj.result);
				                    var jsonObj = JSON.parse(response);  // JSON.parse(); 方法
				                    var imgNode = document.createElement('img');
				                    imgNode.setAttribute('src', jsonObj.result);
				                    $("#summernote").summernote('insertNode', imgNode);
				                },
				                error: function (response) {
				                    alert("失败");
				                }
				            });
				        });
				    }
			    }
		    });
	    });
        //初始化summernote的值
	    //var encodevalue = @Model.Content;
        //var decodevalue = htmlDecode(encodevalue);
        $('#summernote').summernote('code', "asd");
	    
        //设置表单数值
	    $("form").submit(function (e) {
	        var makrup = $("#summernote").summernote('code');
            
		    //var encodevalue = htmlEncode(makrup);
		    $("#Content").val(makrup);
	    });

    </script>

}